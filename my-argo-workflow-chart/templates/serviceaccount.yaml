# my-argo-workflow-chart/templates/serviceaccount.yaml
{{- if .Values.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Release.Namespace }}
{{- end }}

---
# my-argo-workflow-chart/templates/role.yaml
{{- if .Values.serviceAccount.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Values.serviceAccount.name }}-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["argoproj.io"]
    resources: ["workflows", "workflowtemplates", "workfloweventbindings", "cronworkflows"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Add other resources your workflow might interact with (e.g., configmaps, secrets, jobs, volumes)
  # Example for ConfigMaps:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
{{- end }}

---
# my-argo-workflow-chart/templates/rolebinding.yaml
{{- if .Values.serviceAccount.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.serviceAccount.name }}-rolebinding
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Values.serviceAccount.name }}-role
  apiGroup: rbac.authorization.k8s.io
{{- end }}