# .github/workflows/helm-ci.yaml

name: Helm Chart CI/CD

on:
  pull_request:
    branches:
      - main
    paths:
      - 'my-argo-workflow-chart/**'
      - '.github/workflows/helm-ci.yaml'
  push:
    branches:
      - main
    paths:
      - 'my-argo-workflow-chart/**'
      - '.github/workflows/helm-ci.yaml'

env:
  CHART_DIR: my-argo-workflow-chart
  CHART_REPO_BRANCH: gh-pages
  # IMPORTANT: Replace with your actual GitHub username and repository name
  CHART_REPO_URL: https://<YOUR_GITHUB_USERNAME>.github.io/<YOUR_REPO_NAME>/

# Define permissions at the workflow level for simplicity and clarity
permissions:
  contents: write # Grant write permission to the GITHUB_TOKEN for pushing
  pages: write    # Grant write permission for GitHub Pages deployment
  id-token: write # Required for OIDC, if you plan to use it (good practice to include)

jobs:
  lint-chart:
    name: Lint Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.15.0

      - name: Run Helm Lint
        run: |
          cd ${{ env.CHART_DIR }}
          helm lint .
          echo "Helm lint completed successfully."

  package-and-publish:
    name: Package and Publish Helm Chart
    runs-on: ubuntu-latest
    needs: lint-chart
    if: github.event_name == 'push' # Only run this job on push events (after merge)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for operations across branches (like gh-pages)

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.15.0

      - name: Get Chart Version
        id: get_version
        run: |
          # Extract chart version from Chart.yaml
          CHART_VERSION=$(helm show chart ${{ env.CHART_DIR }} | grep '^version:' | awk '{print $2}')
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_OUTPUT
          echo "Detected chart version: $CHART_VERSION"

      - name: Package Helm Chart
        id: package_chart
        run: |
          # Package the chart. The .tgz will be created in the current working directory.
          helm package ${{ env.CHART_DIR }}
          PACKAGED_CHART_FILE="${{ env.CHART_DIR }}-${{ steps.get_version.outputs.CHART_VERSION }}.tgz"
          echo "Packaged chart: $PACKAGED_CHART_FILE"
          echo "PACKAGED_CHART_FILE=$PACKAGED_CHART_FILE" >> $GITHUB_OUTPUT

      # --- NEW / MODIFIED STEPS FOR ROBUST PUBLISHING ---

      - name: Prepare Chart Repository Directory
        run: |
          # Create a temporary directory to build the gh-pages content
          mkdir -p .helm_repo_temp

      - name: Checkout Helm Chart Repository Branch
        # Checkout the gh-pages branch into the temporary directory
        # This allows us to merge the index.yaml correctly
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }} # Checkout the same repository
          ref: ${{ env.CHART_REPO_BRANCH }} # Checkout the gh-pages branch
          path: .helm_repo_temp # Checkout into the temporary directory
          token: ${{ secrets.GITHUB_TOKEN }} # Use GITHUB_TOKEN for authentication

      - name: Add New Chart to Repository
        run: |
          # Copy the newly packaged chart to the temporary repo directory
          cp ${{ steps.package_chart.outputs.PACKAGED_CHART_FILE }} .helm_repo_temp/

      - name: Generate/Update Helm Repository Index
        run: |
          # Generate or update the index.yaml file in the temporary repo directory
          # --merge is crucial to add new charts to existing index.yaml
          # --url points to the public URL where the charts will be served
          helm repo index .helm_repo_temp/ --url ${{ env.CHART_REPO_URL }}

      - name: Commit and Push to GitHub Pages
        # Use a simple Git push since we've prepared the .helm_repo_temp
        # This approach provides more control and clarity than peaceiris/actions-gh-pages
        run: |
          cd .helm_repo_temp
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Publish helm chart ${{ env.CHART_DIR }}-${{ steps.get_version.outputs.CHART_VERSION }}" || echo "No changes to commit"
          git push origin ${{ env.CHART_REPO_BRANCH }}
